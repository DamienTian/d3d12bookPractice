//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16
//   float4 gFogColor;                  // Offset:  448 Size:    16
//   float gFogStart;                   // Offset:  464 Size:     4
//   float gFogRange;                   // Offset:  468 Size:     4
//   float2 cbPerObjectPad2;            // Offset:  472 Size:     8 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  480
//       float FalloffStart;            // Offset:  492
//       float3 Direction;              // Offset:  496
//       float FalloffEnd;              // Offset:  508
//       float3 Position;               // Offset:  512
//       float SpotPower;               // Offset:  524
//
//   } gLights[16];                     // Offset:  480 Size:   768
//
// }
//
// cbuffer cbMaterial
// {
//
//   float4 gDiffuseAlbedo;             // Offset:    0 Size:    16
//   float3 gFresnelR0;                 // Offset:   16 Size:    12
//   float gRoughness;                  // Offset:   28 Size:     4
//   float4x4 gMatTransform;            // Offset:   32 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gsamAnisotropicWrap               sampler      NA          NA             s4      1 
// gDiffuseMap                       texture  float4          2d             t0      1 
// cbPass                            cbuffer      NA          NA            cb1      1 
// cbMaterial                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      0x00000000: ps_5_0
      0x00000008: dcl_globalFlags refactoringAllowed | skipOptimization
      0x0000000C: dcl_constantbuffer CB1[41], immediateIndexed
      0x0000001C: dcl_constantbuffer CB2[2], immediateIndexed
      0x0000002C: dcl_sampler s4, mode_default
      0x00000038: dcl_resource_texture2d (float,float,float,float) t0
      0x00000048: dcl_input_ps linear v1.xyz
      0x00000054: dcl_input_ps linear v2.xyz
      0x00000060: dcl_input_ps linear v3.xy
      0x0000006C: dcl_output o0.xyzw
      0x00000078: dcl_temps 13
      0x00000080: dcl_indexableTemp x0[21], 4
//
// Initial variable locations:
//   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
//   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
//   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
//   v3.x <- pin.TexC.x; v3.y <- pin.TexC.y; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 119 "E:\DirectX12\d3d12bookPractice\Chapter 10 Blending\BlendDemo\Shaders\Default.hlsl"
   0  0x00000090: sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s4
   1  0x000000BC: mul r0.xyzw, r0.xyzw, cb2[0].xyzw  // r0.x <- diffuseAlbedo.x; r0.y <- diffuseAlbedo.y; r0.z <- diffuseAlbedo.z; r0.w <- diffuseAlbedo.w

#line 129
   2  0x000000DC: dp3 r1.x, v2.xyzx, v2.xyzx
   3  0x000000F8: rsq r1.x, r1.x
   4  0x0000010C: mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- pin.NormalW.x; r1.y <- pin.NormalW.y; r1.z <- pin.NormalW.z

#line 132
   5  0x00000128: mov r2.xyz, -v1.xyzx
   6  0x00000140: add r2.xyz, r2.xyzx, cb1[24].xyzx  // r2.x <- toEyeW.x; r2.y <- toEyeW.y; r2.z <- toEyeW.z

#line 133
   7  0x00000160: dp3 r1.w, r2.xyzx, r2.xyzx
   8  0x0000017C: sqrt r1.w, r1.w  // r1.w <- distToEye

#line 134
   9  0x00000190: div r2.xyz, r2.xyzx, r1.wwww

#line 137
  10  0x000001AC: mul r3.xyz, r0.xyzx, cb1[27].xyzx  // r3.x <- ambient.x; r3.y <- ambient.y; r3.z <- ambient.z

#line 139
  11  0x000001CC: mov r2.w, -cb2[1].w
  12  0x000001E8: add r4.w, r2.w, l(1.000000)  // r4.w <- shininess

#line 140
  13  0x00000204: mov r5.xyz, r0.xyzx  // r5.x <- mat.DiffuseAlbedo.x; r5.y <- mat.DiffuseAlbedo.y; r5.z <- mat.DiffuseAlbedo.z
  14  0x00000218: mov r5.w, cb2[1].x  // r5.w <- mat.FresnelR0.x
  15  0x00000230: mov r4.yz, cb2[1].yyzy  // r4.y <- mat.FresnelR0.y; r4.z <- mat.FresnelR0.z
  16  0x00000248: mov r4.w, r4.w  // r4.w <- mat.Shininess

#line 142
  17  0x0000025C: nop 
  18  0x00000260: mov x0[0].xyz, cb1[30].xyzx
  19  0x0000027C: mov x0[2].xyz, cb1[31].xyzx
  20  0x00000298: mov x0[4].xyz, cb1[32].xyzx
  21  0x000002B4: mov x0[6].xyz, cb1[33].xyzx
  22  0x000002D0: mov x0[8].xyz, cb1[34].xyzx
  23  0x000002EC: mov x0[10].xyz, cb1[35].xyzx
  24  0x00000308: mov x0[12].xyz, cb1[36].xyzx
  25  0x00000324: mov x0[14].xyz, cb1[37].xyzx
  26  0x00000340: mov x0[16].xyz, cb1[38].xyzx
  27  0x0000035C: mov x0[18].xyz, cb1[39].xyzx
  28  0x00000378: mov x0[20].xyz, cb1[40].xyzx
  29  0x00000394: mov r5.xyzw, r5.xyzw
  30  0x000003A8: mov r4.yzw, r4.yyzw
  31  0x000003BC: mov r1.xyz, r1.xyzx
  32  0x000003D0: mov r2.xyz, r2.xyzx

#line 142 "LightingUtil.hlsl"
  33  0x000003E4: mov r0.xyz, l(0,0,0,0)  // r0.x <- result.x; r0.y <- result.y; r0.z <- result.z

#line 147
  34  0x00000404: mov r2.w, l(0)  // r2.w <- i
  35  0x00000418: mov r6.xyz, r0.xyzx  // r6.x <- result.x; r6.y <- result.y; r6.z <- result.z
  36  0x0000042C: mov r3.w, r2.w  // r3.w <- i
  37  0x00000440: loop 
  38  0x00000444:   ilt r4.x, r3.w, l(3)
  39  0x00000460:   breakc_z r4.x

#line 149
  40  0x0000046C:   mov r4.x, l(1.000000)  // r4.x <- shadowFactor.x
  41  0x00000480:   nop 
  42  0x00000484:   imul null, r6.w, r3.w, l(6)
  43  0x000004A4:   mov r7.xyz, x0[r6.w + 0].xyzx
  44  0x000004C0:   mov r8.xyz, x0[r6.w + 2].xyzx
  45  0x000004E0:   mov r9.x, r5.w
  46  0x000004F4:   mov r9.yzw, r4.yyzw
  47  0x00000508:   mov r10.xyz, r5.xyzx
  48  0x0000051C:   mov r11.xyz, r1.xyzx
  49  0x00000530:   mov r12.xyz, r2.xyzx

#line 67
  50  0x00000544:   mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z

#line 70
  51  0x0000055C:   dp3 r6.w, r8.xyzx, r11.xyzx
  52  0x00000578:   max r6.w, r6.w, l(0.000000)  // r6.w <- ndotl

#line 71
  53  0x00000594:   mul r7.xyz, r6.wwww, r7.xyzx  // r7.x <- lightStrength.x; r7.y <- lightStrength.y; r7.z <- lightStrength.z

#line 73
  54  0x000005B0:   nop 
  55  0x000005B4:   mov r7.xyz, r7.xyzx
  56  0x000005C8:   mov r8.xyz, r8.xyzx
  57  0x000005DC:   mov r11.xyz, r11.xyzx
  58  0x000005F0:   mov r12.xyz, r12.xyzx
  59  0x00000604:   mov r10.xyz, r10.xyzx
  60  0x00000618:   mov r9.xyzw, r9.xyzw

#line 46
  61  0x0000062C:   mul r6.w, r9.w, l(256.000000)  // r6.w <- m

#line 47
  62  0x00000648:   add r12.xyz, r8.xyzx, r12.xyzx
  63  0x00000664:   dp3 r7.w, r12.xyzx, r12.xyzx
  64  0x00000680:   rsq r7.w, r7.w
  65  0x00000694:   mul r12.xyz, r7.wwww, r12.xyzx  // r12.x <- halfVec.x; r12.y <- halfVec.y; r12.z <- halfVec.z

#line 49
  66  0x000006B0:   add r7.w, r6.w, l(8.000000)
  67  0x000006CC:   dp3 r8.w, r12.xyzx, r11.xyzx
  68  0x000006E8:   max r8.w, r8.w, l(0.000000)
  69  0x00000704:   log r8.w, r8.w
  70  0x00000718:   mul r6.w, r6.w, r8.w
  71  0x00000734:   exp r6.w, r6.w
  72  0x00000748:   mul r6.w, r6.w, r7.w
  73  0x00000764:   div r6.w, r6.w, l(8.000000)  // r6.w <- roughnessFactor

#line 50
  74  0x00000780:   nop 
  75  0x00000784:   mov r9.xyz, r9.xyzx
  76  0x00000798:   mov r12.xyz, r12.xyzx
  77  0x000007AC:   mov r8.xyz, r8.xyzx

#line 36
  78  0x000007C0:   dp3 r7.w, r12.xyzx, r8.xyzx
  79  0x000007DC:   max r7.w, r7.w, l(0.000000)
  80  0x000007F8:   min r7.w, r7.w, l(1.000000)  // r7.w <- cosIncidentAngle

#line 38
  81  0x00000814:   mov r7.w, -r7.w
  82  0x0000082C:   add r7.w, r7.w, l(1.000000)  // r7.w <- f0

#line 39
  83  0x00000848:   mov r8.xyz, -r9.xyzx
  84  0x00000860:   add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  85  0x00000888:   mul r8.w, r7.w, r7.w
  86  0x000008A4:   mul r8.w, r7.w, r8.w
  87  0x000008C0:   mul r8.w, r7.w, r8.w
  88  0x000008DC:   mul r7.w, r7.w, r8.w
  89  0x000008F8:   mul r8.xyz, r7.wwww, r8.xyzx
  90  0x00000914:   add r8.xyz, r8.xyzx, r9.xyzx  // r8.x <- reflectPercent.x; r8.y <- reflectPercent.y; r8.z <- reflectPercent.z

#line 41
  91  0x00000930:   mov r8.xyz, r8.xyzx  // r8.x <- <SchlickFresnel return value>.x; r8.y <- <SchlickFresnel return value>.y; r8.z <- <SchlickFresnel return value>.z

#line 50
  92  0x00000944:   mov r8.xyz, r8.xyzx  // r8.x <- fresnelFactor.x; r8.y <- fresnelFactor.y; r8.z <- fresnelFactor.z

#line 52
  93  0x00000958:   mul r8.xyz, r6.wwww, r8.xyzx  // r8.x <- specAlbedo.x; r8.y <- specAlbedo.y; r8.z <- specAlbedo.z

#line 56
  94  0x00000974:   add r9.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95  0x0000099C:   div r8.xyz, r8.xyzx, r9.xyzx

#line 58
  96  0x000009B8:   add r8.xyz, r8.xyzx, r10.xyzx
  97  0x000009D4:   mul r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- <BlinnPhong return value>.x; r7.y <- <BlinnPhong return value>.y; r7.z <- <BlinnPhong return value>.z

#line 73
  98  0x000009F0:   mov r7.xyz, r7.xyzx  // r7.x <- <ComputeDirectionalLight return value>.x; r7.y <- <ComputeDirectionalLight return value>.y; r7.z <- <ComputeDirectionalLight return value>.z

#line 149
  99  0x00000A04:   mul r7.xyz, r4.xxxx, r7.xyzx
 100  0x00000A20:   add r6.xyz, r6.xyzx, r7.xyzx

#line 150
 101  0x00000A3C:   iadd r3.w, r3.w, l(1)
 102  0x00000A58: endloop 

#line 167
 103  0x00000A5C: mov r6.xyz, r6.xyzx  // r6.x <- <ComputeLighting return value>.x; r6.y <- <ComputeLighting return value>.y; r6.z <- <ComputeLighting return value>.z

#line 142 "E:\DirectX12\d3d12bookPractice\Chapter 10 Blending\BlendDemo\Shaders\Default.hlsl"
 104  0x00000A70: mov r6.xyz, r6.xyzx  // r6.x <- directLight.x; r6.y <- directLight.y; r6.z <- directLight.z

#line 145
 105  0x00000A84: add r0.xyz, r3.xyzx, r6.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z

#line 148
 106  0x00000AA0: mov r1.x, -cb1[29].x
 107  0x00000ABC: add r1.x, r1.x, r1.w
 108  0x00000AD8: div r1.x, r1.x, cb1[29].y
 109  0x00000AF8: max r1.x, r1.x, l(0.000000)
 110  0x00000B14: min r1.x, r1.x, l(1.000000)  // r1.x <- fogAmount

#line 149
 111  0x00000B30: mov r1.yzw, -r0.xxyz
 112  0x00000B48: add r1.yzw, r1.yyzw, cb1[28].xxyz
 113  0x00000B68: mul r1.xyz, r1.yzwy, r1.xxxx
 114  0x00000B84: add r0.xyz, r0.xyzx, r1.xyzx

#line 153
 115  0x00000BA0: mov r0.w, r0.w  // r0.w <- litColor.w

#line 155
 116  0x00000BB4: mov o0.xyz, r0.xyzx
 117  0x00000BC8: mov o0.w, r0.w
 118  0x00000BDC: ret 
// Approximately 119 instruction slots used
